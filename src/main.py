#imports obviously
import decimal
from rich import print
from rich.panel import Panel
from rich.prompt import Prompt

time = 0.0
print(Panel("Welcome to PyTime!", subtitle="A FOSS Retiming tool."))
segment = int(Prompt.ask("How many Segments are there in the Video"))
#finds the time of the video
for _ in range(segment):
    print("\n")
    #makes it so that the user doesn't have to format the debug info
    for _ in range(1):
        blank = Prompt.ask("(Debug Info) What is the Starting Frame?")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        debug_info_start = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
    print("\n")
    for _ in range(1):
        blank = Prompt.ask("(Debug Info) What is the Ending Frame?")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        debug_info_end = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
    a = 'cmt\": \"'
    lct_start = debug_info_start.split(a, 1)
    if len(lct_start) > 0:
        lct_start = lct_start[1]
    lct_end = debug_info_end.split(a, 1)
    if len(lct_end) > 0:
        lct_end = lct_end[1]
    a = '\",'
    lct_start = lct_start.split(a, 1)[0]
    lct_end = lct_end.split(a, 1)[0]
    time = (decimal.Decimal(lct_end) - decimal.Decimal(lct_start)) + decimal.Decimal(time)
#formats the time
time = str(time)
time = time.split(".", 1)
if len(time) > 0:
    seconds = time[0]
    milliseconds = time[1]
    milliseconds = str(milliseconds)
    seconds = int(seconds)
def seconds_to_time(seconds):
    seconds = int(seconds)
    minutes = seconds//60
    hours = minutes//60
    seconds = str(seconds)
    minutes = str(minutes)
    hours = str(hours)
    if seconds == "0":
        return ("0." + milliseconds)
    elif minutes == "0":
        if len(seconds) == 1:
            return ("0" + seconds + "." + milliseconds)
        else:
            return (seconds + "." + milliseconds)
    elif hours == "0":
        return (minutes + ":" + seconds + "." + milliseconds)
    else:
        return (hours + ":" + minutes + ":" + seconds + "." + milliseconds)
formatted_time = seconds_to_time(seconds)
#prints the time
message = Prompt.ask("How would you like the output to be formatted?", choices=["Mod Note", "Just Time", "Both"])
if message == "Mod Note":
    print("Mod Note: Retimed to", formatted_time, "using PyTime")
elif message == "Just Time":
    print("Your final time is:", formatted_time)
elif message == "Both":
    print("Mod Note: Retimed to", formatted_time, "using PyTime")
    print("Your final time is:", formatted_time)
#prompts the user to close the program
close = Prompt.ask("Would you like to close the program?", choices=["Yes"])
print("Closing Program\n")
print("Thank you for using PyTime")
close = True#imports obviously
import decimal
from rich import print
from rich.panel import Panel
from datetime import timedelta, datetime
from rich.prompt import Prompt
import tkinter as tk
from os import getcwd

time = 0.0
print(Panel("Welcome to PyTime!", subtitle="A FOSS Retiming tool."))
segment = int(Prompt.ask("How many Segments are there in the Video"))
#finds the time of the video
for _ in range(segment):
    print("\n")
    #makes it so that the user doesn't have to format the debug info
    for _ in range(1):
        blank = Prompt.ask("(Debug Info) What is the Starting Frame?")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        debug_info_start = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
    print("\n")
    for _ in range(1):
        blank = Prompt.ask("(Debug Info) What is the Ending Frame?")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        debug_info_end = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
        blank = input(" ")
    a = 'cmt\": \"'
    lct_start = debug_info_start.split(a, 1)
    if len(lct_start) > 0:
        lct_start = lct_start[1]
    lct_end = debug_info_end.split(a, 1)
    if len(lct_end) > 0:
        lct_end = lct_end[1]
    a = '\",'
    lct_start = lct_start.split(a, 1)[0]
    lct_end = lct_end.split(a, 1)[0]
    time = (decimal.Decimal(lct_end) - decimal.Decimal(lct_start)) + decimal.Decimal(time)
#formats the time
time = str(time)
time = time.split(".", 1)
if len(time) > 0:
    seconds = time[0]
    milliseconds = time[1]
    milliseconds = str(milliseconds)
    seconds = int(seconds)
def seconds_to_time(seconds):
    seconds = int(seconds)
    minutes = seconds//60
    hours = minutes//60
    seconds = str(seconds)
    minutes = str(minutes)
    hours = str(hours)
    if seconds == "0":
        return ("0." + milliseconds)
    elif minutes == "0":
        if len(seconds) == 1:
            return ("0" + seconds + "." + milliseconds)
        else:
            return (seconds + "." + milliseconds)
    elif hours == "0":
        return (minutes + ":" + seconds + "." + milliseconds)
    else:
        return (hours + ":" + minutes + ":" + seconds + "." + milliseconds)
formatted_time = seconds_to_time(seconds)
#prints the time
message = Prompt.ask("How would you like the output to be formatted?", choices=["Mod Note", "Just Time", "Both"])
if message == "Mod Note":
    print("Mod Note: Retimed to", formatted_time, "using PyTime")
elif message == "Just Time":
    print("Your final time is:", formatted_time)
elif message == "Both":
    print("Mod Note: Retimed to", formatted_time, "using PyTime")
    print("Your final time is:", formatted_time)
#prompts the user to close the program
close = Prompt.ask("Would you like to close the program?", choices=["Yes"])
print("Closing Program\n")
print("Thank you for using PyTime")
close = True
